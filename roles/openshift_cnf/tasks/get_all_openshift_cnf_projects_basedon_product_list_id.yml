---
- name: Check that organization_id is defined
  ansible.builtin.assert:
    that: "{{ organization_id }} is defined"

- name: "Get certification Openshift-cnf projects for the organization {{ organization_id }}"
  vars:
    pyxis_apikey: "{{ lookup('file', pyxis_apikey_path) }}"
  ansible.builtin.uri:
    url: "{{ verify_project_url }}/{{ organization_id }}/projects/certification?filter=project_status%21%3Darchived&page_size={{ page_size }}&page=0"
    method: GET
    headers:
      X-API-KEY: "{{ pyxis_apikey }}"
    body_format: json
    status_code: 200
    timeout: 120
  register: cert_project_list_output
  retries: 20
  delay: 3
  until: not cert_project_list_output.failed

- name: >
    Merge all existing cert projects that used the same Product Listing ID with
    the new Openshift-cnf projects
  ansible.builtin.set_fact:
    all_openshift_cnf_projects: "{{ cert_project_list_output.json.data | json_query(query) + [new_openshift_cnf_projects] | flatten }}"  # noqa: jinja[invalid]
  vars:
    query: "[?product_listings[0] == '{{ cert_listings.pyxis_product_list_identifier }}' && project_status != 'archived'] | []._id"
  when:
    - cert_project_list_output | length > 0
    - new_openshift_cnf_projects is defined

- name: Print All Openshift-cnf projects
  ansible.builtin.debug:
    var: all_openshift_cnf_projects
...
